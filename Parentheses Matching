import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;

class ParenthesesMatching {

    public static void main(String[] args) {
        System.out.println(isValid("((( )(( )){([( )])}"));
    }
    public static boolean isValid(String s) {
        Queue<Character> queue = new LinkedList<>();
        Stack<Character> stack = new Stack<>();

        for(int i = 0 ; i < s.length() ; i++) {
            char c = s.charAt(i);
            if(c != ' ' ) queue.add(c);
        }

while(!queue.isEmpty()) {
    if (!stack.isEmpty()) {
        char q = queue.peek();
        char st = stack.peek();
        if ( (q == ')' && st == '(') ||
                (q == ']' && st == '[') ||
                (q == '}' && st == '{'))
        {
                    stack.pop();
                    queue.remove();
        }
                else stack.add(queue.remove());
    }
    else stack.add(queue.remove());
}

        return stack.isEmpty();
    }
}
